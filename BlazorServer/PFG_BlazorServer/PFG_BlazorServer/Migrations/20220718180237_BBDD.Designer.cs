// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PFG_BlazorServer.Data;

namespace PFG_BlazorServer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220718180237_BBDD")]
    partial class BBDD
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("PFG_BlazorServer.Models.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("ADMINISTRADOR");
                });

            modelBuilder.Entity("PFG_BlazorServer.Models.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdminId")
                        .HasColumnType("int");

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CodigoPostal")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Industry")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.ToTable("EMPRESA");
                });

            modelBuilder.Entity("PFG_BlazorServer.Models.Estudiante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdminId")
                        .HasColumnType("int");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaDeNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("HasCV")
                        .HasColumnType("bit");

                    b.Property<bool>("HasPhoto")
                        .HasColumnType("bit");

                    b.Property<int?>("InscripcionId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("InscripcionId");

                    b.ToTable("ESTUDIANTE");
                });

            modelBuilder.Entity("PFG_BlazorServer.Models.EstudiosAcademicos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionCurso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EstudianteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FinCurso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InicioCurso")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("NameCentro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameCurso")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EstudianteId");

                    b.ToTable("ESTUDIO");
                });

            modelBuilder.Entity("PFG_BlazorServer.Models.ExperienciaLaboral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EstudianteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FinTrabajo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InicioTrabajo")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameEmpresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameTrabajo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PuestoTrabajo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EstudianteId");

                    b.ToTable("EXPERIENCIA");
                });

            modelBuilder.Entity("PFG_BlazorServer.Models.Fichero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int?>("EstudianteId")
                        .HasColumnType("int");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("EstudianteId");

                    b.ToTable("FICHERO");
                });

            modelBuilder.Entity("PFG_BlazorServer.Models.Idioma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EstudianteId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Nivel")
                        .HasColumnType("int");

                    b.Property<int?>("OfertaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstudianteId");

                    b.HasIndex("OfertaId");

                    b.ToTable("IDIOMA");
                });

            modelBuilder.Entity("PFG_BlazorServer.Models.Inscripcion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OfertaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OfertaId");

                    b.ToTable("INSCRIPCION");
                });

            modelBuilder.Entity("PFG_BlazorServer.Models.Oferta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdminId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CaducidadOferta")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ciudad")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("DisponibilidadViajar")
                        .HasColumnType("bit");

                    b.Property<int>("DuracionContrato")
                        .HasColumnType("int");

                    b.Property<string>("EmailContacto")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int>("EstadoOferta")
                        .HasColumnType("int");

                    b.Property<int?>("EstudianteId")
                        .HasColumnType("int");

                    b.Property<int>("Experiencia")
                        .HasColumnType("int");

                    b.Property<int?>("FicheroAdjuntoId")
                        .HasColumnType("int");

                    b.Property<int>("MaxSalario")
                        .HasColumnType("int");

                    b.Property<int>("MinSalario")
                        .HasColumnType("int");

                    b.Property<string>("NivelEstudios")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreContacto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pais")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("PublicacionOferta")
                        .HasColumnType("datetime2");

                    b.Property<string>("Puesto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TelefonoContacto")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("TipoContrato")
                        .HasColumnType("int");

                    b.Property<int>("Titulacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("EstudianteId");

                    b.HasIndex("FicheroAdjuntoId");

                    b.ToTable("OFERTA");
                });

            modelBuilder.Entity("PFG_BlazorServer.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EstudianteId")
                        .HasColumnType("int");

                    b.Property<int?>("OfertaId")
                        .HasColumnType("int");

                    b.Property<string>("SkillName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EstudianteId");

                    b.HasIndex("OfertaId");

                    b.ToTable("SKILL");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PFG_BlazorServer.Models.Empresa", b =>
                {
                    b.HasOne("PFG_BlazorServer.Models.Admin", null)
                        .WithMany("Empresas")
                        .HasForeignKey("AdminId");
                });

            modelBuilder.Entity("PFG_BlazorServer.Models.Estudiante", b =>
                {
                    b.HasOne("PFG_BlazorServer.Models.Admin", null)
                        .WithMany("Estudiantes")
                        .HasForeignKey("AdminId");

                    b.HasOne("PFG_BlazorServer.Models.Inscripcion", null)
                        .WithMany("Estudiantes")
                        .HasForeignKey("InscripcionId");
                });

            modelBuilder.Entity("PFG_BlazorServer.Models.EstudiosAcademicos", b =>
                {
                    b.HasOne("PFG_BlazorServer.Models.Estudiante", null)
                        .WithMany("TitulosAcademicos")
                        .HasForeignKey("EstudianteId");
                });

            modelBuilder.Entity("PFG_BlazorServer.Models.ExperienciaLaboral", b =>
                {
                    b.HasOne("PFG_BlazorServer.Models.Estudiante", null)
                        .WithMany("ExperienciaLaboral")
                        .HasForeignKey("EstudianteId");
                });

            modelBuilder.Entity("PFG_BlazorServer.Models.Fichero", b =>
                {
                    b.HasOne("PFG_BlazorServer.Models.Empresa", null)
                        .WithMany("FicherosAdjuntos")
                        .HasForeignKey("EmpresaId");

                    b.HasOne("PFG_BlazorServer.Models.Estudiante", null)
                        .WithMany("FicherosAdjuntos")
                        .HasForeignKey("EstudianteId");
                });

            modelBuilder.Entity("PFG_BlazorServer.Models.Idioma", b =>
                {
                    b.HasOne("PFG_BlazorServer.Models.Estudiante", null)
                        .WithMany("Idiomas")
                        .HasForeignKey("EstudianteId");

                    b.HasOne("PFG_BlazorServer.Models.Oferta", null)
                        .WithMany("Idiomas")
                        .HasForeignKey("OfertaId");
                });

            modelBuilder.Entity("PFG_BlazorServer.Models.Inscripcion", b =>
                {
                    b.HasOne("PFG_BlazorServer.Models.Oferta", "Oferta")
                        .WithMany()
                        .HasForeignKey("OfertaId");

                    b.Navigation("Oferta");
                });

            modelBuilder.Entity("PFG_BlazorServer.Models.Oferta", b =>
                {
                    b.HasOne("PFG_BlazorServer.Models.Admin", null)
                        .WithMany("Ofertas")
                        .HasForeignKey("AdminId");

                    b.HasOne("PFG_BlazorServer.Models.Empresa", "Empresa")
                        .WithMany("OfertasPublicadas")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PFG_BlazorServer.Models.Estudiante", null)
                        .WithMany("OfertasSolicitadas")
                        .HasForeignKey("EstudianteId");

                    b.HasOne("PFG_BlazorServer.Models.Fichero", "FicheroAdjunto")
                        .WithMany()
                        .HasForeignKey("FicheroAdjuntoId");

                    b.Navigation("Empresa");

                    b.Navigation("FicheroAdjunto");
                });

            modelBuilder.Entity("PFG_BlazorServer.Models.Skill", b =>
                {
                    b.HasOne("PFG_BlazorServer.Models.Estudiante", null)
                        .WithMany("Skills")
                        .HasForeignKey("EstudianteId");

                    b.HasOne("PFG_BlazorServer.Models.Oferta", null)
                        .WithMany("Skills")
                        .HasForeignKey("OfertaId");
                });

            modelBuilder.Entity("PFG_BlazorServer.Models.Admin", b =>
                {
                    b.Navigation("Empresas");

                    b.Navigation("Estudiantes");

                    b.Navigation("Ofertas");
                });

            modelBuilder.Entity("PFG_BlazorServer.Models.Empresa", b =>
                {
                    b.Navigation("FicherosAdjuntos");

                    b.Navigation("OfertasPublicadas");
                });

            modelBuilder.Entity("PFG_BlazorServer.Models.Estudiante", b =>
                {
                    b.Navigation("ExperienciaLaboral");

                    b.Navigation("FicherosAdjuntos");

                    b.Navigation("Idiomas");

                    b.Navigation("OfertasSolicitadas");

                    b.Navigation("Skills");

                    b.Navigation("TitulosAcademicos");
                });

            modelBuilder.Entity("PFG_BlazorServer.Models.Inscripcion", b =>
                {
                    b.Navigation("Estudiantes");
                });

            modelBuilder.Entity("PFG_BlazorServer.Models.Oferta", b =>
                {
                    b.Navigation("Idiomas");

                    b.Navigation("Skills");
                });
#pragma warning restore 612, 618
        }
    }
}
